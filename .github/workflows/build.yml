name: Build oVirt TinyCore
permissions:
  issues: write
  pull-requests: write
  contents: write
on:
  push:
  pull_request:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GenISOImage
        run: sudo apt update && sudo apt install -y genisoimage
      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer
          packer plugins install github.com/hashicorp/qemu
      - name: Install QEMU and other dependencies
        run: sudo apt update && sudo apt install -y qemu-system qemu-utils gocr libtirpc-dev imagemagick
      - name: Run build script
        run: sudo ./build.sh
      - name: Run Packer
        run: PACKER_LOG=1 packer build .
      - name: Move all artifacts to a single directory
        if: always()
        run: |
          mkdir output
          cp -av builddir/oVirtTinyCore*.iso output/
          cp -av qcowbuilddir/*.qcow2 output/
          cp -av src/busybox/busybox.tar.gz output/
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oVirtTinyCoreLinux
          if-no-files-found: error
          path: |
            output/*
      - name: Run tests
        run: ./test.sh
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ScreenShot
          if-no-files-found: error
          path: |
            oVirtTinyCore.png
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: oVirtTinyCoreLinux
          path: dist/
      - name: Create release
        run: gh release create "${GITHUB_REF##*/}" --generate-notes ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
